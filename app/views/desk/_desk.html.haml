%div.game
    - flash.each do |name, msg|
        - if msg.is_a?(String)
            %div{:class => "alert alert-#{name == :notice ? "success" : "error"}"}
                %a.close{"data-dismiss" => "alert"} Ã—
                = content_tag :div, msg, :id => "flash_#{name}"
    - temp_hash = @desk.checkers
    - color = ""
    %h1
        - first_user = User.where(id: @desk.first_player_id).first
        - second_user = User.where(id: @desk.second_player_id).first
        = first_user.username
        = " VS "
        - if second_user
            = second_user.username
        - else
            = "Waiting for second player"
    = "#{@desk.turn} has #{@desk.moves} moves" if @desk.moves != 0
    %dov.clear_float
    %div.desk
        %div.throw_and_turn
            %div.throw
                %span Throw
            %div.dice_res
                - if @desk.dice.dices
                    - @desk.dice.dices.each do |k, dice|
                        -# scip [0] element because it is nil
                        - next unless dice
                        = image_tag "#{dice}.png"
            %div.skip
                %span Skip
        %aside.game_sidebar
            %div#first_user_sidebar
                - temp_hash.each do |k, v|
                    - if /off_game/.match(k) && v == "white"
                        %div.checker_home
            %div#second_user_sidebar
                - temp_hash.each do |k, v|
                    - if /off_game/.match(k) && v == "black"
                        %div.checker_home
        -(1..24).each do |x|
            - if x%2==0
                - background_color = "#c5834f" 
            - else
                - background_color = "#ebb678" 
            - if x < 13
                %div.top_desk
                    %div.head
                        %span= x
                    %div{class: "fields", style: "background-color: #{background_color}; border-color: #{background_color};"}
                        - checkers_count = 0
                        - temp_hash.each do |current_field, current_color|
                            - checkers_count += 1  if current_field.match(/^#{x}\//)
                        -(1..5).each do |nested|
                            %div{class: "field", id: "#{x}/#{nested}"}
                                - if temp_hash.has_key?("#{x}/#{nested}")
                                    - color = temp_hash["#{x}/#{nested}"]
                                    %div{:class => "checker_#{color}", :id => "#{x}/#{nested}"}
                                - elsif nested == 5
                                    - (6..15).each do |out_nested|
                                        - if temp_hash.has_key?("#{x}/#{out_nested}")
                                            - color = temp_hash["#{x}/#{out_nested}"]
                                            %div{:class => "checker_#{color}", :id => "#{x}/#{out_nested}"}
                                                %span= checkers_count
                - if x == 6
                    %div.middle_top
                        - checkers_count = 0
                        - color = "white"
                        - temp_hash.each do |k, v|
                            - if v == color && k.match(/middle/)
                                - checkers_count += 1
                                %div{:class => "checker_#{color}", :id => "#{k}", :style=> "position: none;"}
                                    %span= checkers_count
            - if x == 12
                %dov.clear_float
            - if x > 12 && x <= 24
                %div.bottom_desk
                    %div{class: "fields", style: "background-color: #{background_color}; border-color: #{background_color};"}
                        - checkers_count = 0
                        - temp_hash.each do |current_field, current_color|
                            - checkers_count += 1  if current_field.match(/^#{x}\//)
                        - nested = 5
                        - 5.times do
                            - if nested == 5
                                - (6..15).each do |out_nested|
                                    - if temp_hash.has_key?("#{x}/#{out_nested}")
                                        - color = temp_hash["#{x}/#{out_nested}"]
                                        %div{:class => "checker_#{color}", :id => "#{x}/#{out_nested}"}
                            %div{class: "field", id: "#{x}/#{nested}"}
                                - if temp_hash.has_key?("#{x}/#{nested}")
                                    - color = temp_hash["#{x}/#{nested}"]
                                    %div{:class => "checker_#{color}", :id => "#{x}/#{nested}"}
                                        %span
                                            = checkers_count if nested > 5
                                - nested = nested - 1
                    %div.head
                        %span= x
                - if x == 18
                    %div.middle_bottom
                        - checkers_count = 0
                        - color = "black"
                        - temp_hash.each do |k, v|
                            - if v == color && k.match(/middle/)
                                - checkers_count += 1
                                %div{:class => "checker_#{color}", :id => "#{k}"}
                                    %span= checkers_count
            - if x == 25
                %dov.clear_float
    = link_to "live Game", "#", :confirm => "Are you sure?" 
    = " | "
    = link_to "Pause", "#"
    -# hidden fields for js/ruby validations, and ajax requests
    = form_tag(:controller => "desk", :action => "move", :method => "post", :id => "hidden_form") do
        = hidden_field_tag(:id, @desk.id, :id => "id_for_hidden")
        = hidden_field_tag(:first_player_id, @desk.first_player_id, id: "first_player_id")
        = hidden_field_tag(:second_player_id, @desk.second_player_id, id: "second_player_id")
        = hidden_field_tag(:turn, @desk.turn, id: "turn")
    

